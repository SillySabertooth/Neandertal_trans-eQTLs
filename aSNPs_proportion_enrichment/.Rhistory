myseq_test_2 <- myseq_test
substr(myseq_test_2,snp_pos_from_start,snp_pos_from_start) <- alt_snp
str_sub
str_sub()
?str_sub()
?stringr::str_sub()
myseq_test_2 <- myseq_test
stringr::sub_str(myseq_test_2,snp_pos_from_start,snp_pos_from_start) <- alt_snp
stringr::str_sub(myseq_test_2,snp_pos_from_start,snp_pos_from_start) <- alt_snp
3.0e9
3.0e9/320e+03
1/9375
dat <- data.frame(value=runif(26)*10,
grouping=c(rep("Group 1",10),
rep("Group 2",10),
rep("Group 3",6)),
letters=LETTERS[1:26])
head(dat)
value grouping letters
1 8.316451  Group 1       A
2 9.768578  Group 1       B
3 4.896294  Group 1       C
4 2.004545  Group 1       D
5 4.905058  Group 1       E
6 8.997713  Group 1       F
head(dat)
library(ggplot2)
ggplot(dat, aes(grouping, value, fill=letters, label = letters)) +
geom_bar(position="dodge", stat="identity") +
geom_text(position = position_dodge(width = 1), aes(x=grouping, y=0))
ggplot(dat, aes(letters,value, label = letters)) +
geom_bar(stat="identity") +
facet_wrap(~grouping, scales="free")
z <- fread("Tartu_Ulikooli/pr1_transeQTLs/ntn_no_ILS.tsv")
library(data.table)
z <- fread("Tartu_Ulikooli/pr1_transeQTLs/ntn_no_ILS.tsv")
View(z)
?combn()
setwd("~/Dropbox/Tartu_Ulikooli/pr1_transeQTLs/revising/")
#setwd("~/Tartu_Ulikooli/pr2_GenCorr/R2/cTFs/")
setwd("~/Dropbox/Tartu_Ulikooli/pr1_transeQTLs/Neandertal_trans-eQTLs/collapsing_aSNPs_R2/")
library(data.table)
library(dplyr)
library(tidyr)
#setwd("~/Tartu_Ulikooli/pr2_GenCorr/R2/cTFs/")
setwd("~/Dropbox/Tartu_Ulikooli/pr1_transeQTLs/Neandertal_trans-eQTLs/collapsing_aSNPs_R2/")
dt <- fread("../../../pr2_GenCorr/R2/96_GTEx/96_GTEx.ld")
colnames(dt)[5] <- "R2"
dt <- dt[dt$R2 >= 0.5,]
dt$POS1 <- paste(dt$CHR,dt$POS1, sep = "_")
dt$POS2 <- paste(dt$CHR,dt$POS2, sep = "_")
View(dt)
dt <- rbind(dt, dt[,c(1,3,2,4,5)] %>% setnames(.,c("POS1","POS2"),c("POS2","POS1")))
dt %>% unique()
tmp_list <- list() # the list for safe stuff
for (chr in unique(dt$CHR)){
tmp <- dt[dt$CHR == chr,]
while (nrow(tmp) != 0){
# we iterate through a given chr till all pairs of snps that have link > 0.5 will be united in one haplo,
# it works well for archaic haplo since they inherit in block, while for modern, the more full linkage could be quiried
random_pos <- sample(tmp$POS1,1)
tmp_list[random_pos] <- list(random_pos)
while(nrow(tmp) != 0 & any(unlist(tmp_list[random_pos]) %in% tmp$POS1)){
# attach to the list position that mathces position in the list
tmp_list[random_pos] <- list(unique(c(unlist(tmp_list[random_pos]),
tmp$POS2[tmp$POS1 %in% unlist(tmp_list[random_pos])])))
# remove them from the table
#tmp <- tmp[!tmp$POS1 %in% unlist(tmp_list[random_pos]),]
tmp <- tmp[!tmp$POS2 %in% unlist(tmp_list[random_pos]),]
}
}
}
View(tmp_list)
#i <- "169099483" #debugging
for (i in names(remove_list)){
remove_list[i] <- list(unlist(remove_list[i])[unlist(remove_list[i]) != i])
}
remove_list <- tmp_list # creates and fill a list of SNPs that could be kept from the original one in order to have a list of unrelated SNPs
#i <- "169099483" #debugging
for (i in names(remove_list)){
remove_list[i] <- list(unlist(remove_list[i])[unlist(remove_list[i]) != i])
}
safe_to <- as.character(unlist(remove_list)) # %>% length()
safe_to <- as.character(unlist(remove_list)) # %>% length()
tmp_list <- list() # the list for safe stuff
for (chr in unique(dt$CHR)){
tmp <- dt[dt$CHR == chr,] # tmp table
while (nrow(tmp) != 0){
# we iterate through a given chr till all pairs of snps that have link > 0.5 will be united in the one haplo,
# it works well for archaic haplos since they inherit in block, while for modern, the more full linkage could be quiried (all snps in the haplo have  r2 > 0.5)
# and also the algorithm is not meant to distinguish very close haplotypes, it's more to collapse obvious related SNPs in an automatic way
random_pos <- sample(tmp$POS1,1)
tmp_list[random_pos] <- list(random_pos)
while(nrow(tmp) != 0 & any(unlist(tmp_list[random_pos]) %in% tmp$POS1)){
# attach to the list position that mathces position in the list
tmp_list[random_pos] <- list(unique(c(unlist(tmp_list[random_pos]),
tmp$POS2[tmp$POS1 %in% unlist(tmp_list[random_pos])])))
# remove them from the table
#tmp <- tmp[!tmp$POS1 %in% unlist(tmp_list[random_pos]),]
tmp <- tmp[!tmp$POS2 %in% unlist(tmp_list[random_pos]),]
}
}
}
remove_list <- tmp_list # creates and fill a list of SNPs that could be removed from the original one in order to have a list of unrelated SNPs
#i <- "169099483" #debugging
for (i in names(remove_list)){
remove_list[i] <- list(unlist(remove_list[i])[unlist(remove_list[i]) != i])
}
safe_to <- as.character(unlist(remove_list)) # %>% length()
write.table(safe_to,"remove_background_0.5.txt",col.names = F, row.names = F, quote = F, sep = "\t")
dt_all <- fread("all.trans_eQTL.tested.tsv")
setwd("~/Dropbox/Tartu_Ulikooli/pr1_transeQTLs/Neandertal_trans-eQTLs/aSNPs_proportion_enrichment/")
library(data.table)
library(dplyr)
dt_all <- fread("all.trans_eQTL.tested.tsv")
#removing <- fread("remove_10206.txt", header = F)$V1
removing <- fread("remove_10206_0.8.txt", header = F)$V1
dt_all_removed <- dt_all
dt_all_removed <- dt_all[!dt_all$chr_pos %in% removing,]
table(dt_all_removed$AssessedAllele_AF_rounded)
dt_m <- fread("arch.trans_eQTL.tested.tsv")
dt_all_removed <- dt_all_removed[!dt_all_removed$chr_pos %in% dt_m$chr_pos,]
#removing_small <- fread("remove_77_0.5.txt", header = F)$V1
#removing_small <- fread("remove_57.txt", header = F)$V1
removing_small <- fread("remove_57_0.8.txt", header = F)$V1
dt_m_removed <- dt_m
dt_m_removed <- dt_m[!dt_m$chr_pos %in% removing_small,]
##dt_m_removed <- dt_m_removed[dt_m_removed$chr_pos %in% dt_ntn$chr_pos,] #special for height
t_subset <- data.frame(table(dt_m_removed$AssessedAllele_AF_rounded))
t_subset
dt <- fread("list_of_sign_SNPs.eQTLGen.tsv", header = F)$V1
# making the test
same_af <- dt_all_removed[dt_all_removed$AssessedAllele_AF_rounded %in% dt_m_removed$AssessedAllele_AF_rounded,]
table(same_af$AssessedAllele_AF_rounded)
View(same_af)
#might be 16
get_snps_bins <- function(n){
temp <- same_af[same_af$AssessedAllele_AF_rounded == t_subset$Var1[n],16]$chr_pos
return(sample(temp,t_subset$Freq[n]))
}
n=2
temp <- same_af[same_af$AssessedAllele_AF_rounded == t_subset$Var1[n],16]$chr_pos
#n=2
#might be 16
get_snps_bins <- function(n){
temp <- same_af[same_af$AssessedAllele_AF_rounded == t_subset$Var1[n],16]$chr_pos
return(sample(temp,t_subset$Freq[n]))
}
res <- c()
for (i in 1:100){
r1 <- unlist(lapply(1:nrow(t_subset), function(x) get_snps_bins(x)))
res <- c(res,sum(r1 %in% dt$chr_pos)) #simple associations
#res <- c(res,sum(r1 %in% height$chr_pos)) #simple height test
}
for (i in 1:100){
r1 <- unlist(lapply(1:nrow(t_subset), function(x) get_snps_bins(x)))
res <- c(res,sum(r1 %in% dt)) #simple associations
#res <- c(res,sum(r1 %in% height$chr_pos)) #simple height test
}
res
num <- sum(dt_m_removed$chr_pos %in% dt)
res_sum2 <- data.frame(
median_5_95=paste0(median(res)," (",paste(quantile(res, probs = c(0.05, 0.95)), collapse = " - "),")"),
d1=sum(res >= num),
d2=sum(res <= num),
pval=(min(c(sum(res >= num),sum(res <= num),
50))*2)/100,
name="0.5_ilsntnfree_3_aSNP_height")
View(res_sum2)
dt_all <- fread("all.trans_eQTL.tested.tsv")
removing <- fread("remove_10206.txt", header = F)$V1
#removing <- fread("remove_10206_0.8.txt", header = F)$V1
dt_all_removed <- dt_all
dt_all_removed <- dt_all[!dt_all$chr_pos %in% removing,]
table(dt_all_removed$AssessedAllele_AF_rounded)
#
dt_m <- fread("arch.trans_eQTL.tested.tsv")
dt_all_removed <- dt_all_removed[!dt_all_removed$chr_pos %in% dt_m$chr_pos,]
#removing_small <- fread("remove_77_0.5.txt", header = F)$V1
#removing_small <- fread("remove_57.txt", header = F)$V1
removing_small <- fread("remove_57_0.8.txt", header = F)$V1
#removing_small <- fread("remove_77_0.5.txt", header = F)$V1
removing_small <- fread("remove_57.txt", header = F)$V1
removing_small <- fread("remove_77_0.5.txt", header = F)$V1
#removing_small <- fread("remove_57.txt", header = F)$V1
#removing_small <- fread("remove_57_0.8.txt", header = F)$V1
dt_m_removed <- dt_m
dt_m_removed <- dt_m[!dt_m$chr_pos %in% removing_small,]
##dt_m_removed <- dt_m_removed[dt_m_removed$chr_pos %in% dt_ntn$chr_pos,] #special for height
t_subset <- data.frame(table(dt_m_removed$AssessedAllele_AF_rounded))
dt <- fread("list_of_sign_SNPs.eQTLGen.tsv", header = F)$V1
# making the test
same_af <- dt_all_removed[dt_all_removed$AssessedAllele_AF_rounded %in% dt_m_removed$AssessedAllele_AF_rounded,]
table(same_af$AssessedAllele_AF_rounded)
#n=2
#might be 16
get_snps_bins <- function(n){
temp <- same_af[same_af$AssessedAllele_AF_rounded == t_subset$Var1[n],16]$chr_pos
return(sample(temp,t_subset$Freq[n]))
}
res <- c()
for (i in 1:100){
r1 <- unlist(lapply(1:nrow(t_subset), function(x) get_snps_bins(x)))
res <- c(res,sum(r1 %in% dt)) #simple associations
#res <- c(res,sum(r1 %in% height$chr_pos)) #simple height test
}
res
num <- sum(dt_m_removed$chr_pos %in% dt)
res_sum2 <- data.frame(
median_5_95=paste0(median(res)," (",paste(quantile(res, probs = c(0.05, 0.95)), collapse = " - "),")"),
d1=sum(res >= num),
d2=sum(res <= num),
pval=(min(c(sum(res >= num),sum(res <= num),
50))*2)/100,
name="0.5_ilsntnfree_3_aSNP_height")
res_sum2 <- data.frame(
median_5_95=paste0(median(res)," (",paste(quantile(res, probs = c(0.05, 0.95)), collapse = " - "),")"),
d1=sum(res >= num),
d2=sum(res <= num),
pval=(min(c(sum(res >= num),sum(res <= num),
50))*2)/100,
name="0.5_ilsntnfree_3_aSNP_height")
res <- c()
for (i in 1:100){
r1 <- unlist(lapply(1:nrow(t_subset), function(x) get_snps_bins(x)))
res <- c(res,sum(r1 %in% dt)) #simple associations
#res <- c(res,sum(r1 %in% height$chr_pos)) #simple height test
}
res
num <- sum(dt_m_removed$chr_pos %in% dt)
res_sum2 <- data.frame(
median_5_95=paste0(median(res)," (",paste(quantile(res, probs = c(0.05, 0.95)), collapse = " - "),")"),
d1=sum(res >= num),
d2=sum(res <= num),
pval=(min(c(sum(res >= num),sum(res <= num),
50))*2)/100,
name="0.5_ilsntnfree_3_aSNP_height")
View(res_sum2)
res <- c()
for (i in 1:100){
r1 <- unlist(lapply(1:nrow(t_subset), function(x) get_snps_bins(x)))
res <- c(res,sum(r1 %in% dt)) #simple associations
#res <- c(res,sum(r1 %in% height$chr_pos)) #simple height test
}
res
num <- sum(dt_m_removed$chr_pos %in% dt)
#num <- sum(dt_m_removed$chr_pos %in% height$chr_pos)
#num <- 3 #num_of_testing
#res_sum$name <- "r0.5"
res_sum2 <- data.frame(
median_5_95=paste0(median(res)," (",paste(quantile(res, probs = c(0.05, 0.95)), collapse = " - "),")"),
d1=sum(res >= num),
d2=sum(res <= num),
pval=(min(c(sum(res >= num),sum(res <= num),
50))*2)/100,
name="0.5_ilsntnfree_3_aSNP_height")
#height <- fread("50_irnt.gwas.imputed_v3.both_sexes.tsv.gz")
#height <- height[height$low_confidence_variant == F,]
#height <- height[height$pval < 5e-08,]
#height <- separate(height,variant,c("chr","position","REF","ALR"), sep = ":")
#height$chr_pos <- paste(height$chr,height$position, sep = "_")
#write.table(height, "height.sign.txt", row.names = F, quote = F, sep = "\t")
height <- fread("height.sign.txt.gz")
quantile(height$pval, seq(0,1,0.01))
height <- height[height$pval < 6.278699e-16,]
dt_ntn$chr_pos[dt_ntn$chr_pos %in% height$chr_pos]
## random sets Micha
height_assoc <- gsub("^","chr",height$chr_pos)
load("danat_height_analysis_SNPsets.rdat")
a.set
b.sets[1]
num <- sum(a.set %in% height_assoc)
res_100 <- lapply(1:100, function(x) sum(unlist(b.sets[x]) %in% height_assoc)) %>% unlist()
sort(res_100)
res_sum <- data.frame(
aSNPs=num,
median_5_95=paste0(median(res_100)," (",paste(quantile(res_100, probs = c(0.05, 0.95)), collapse = " - "),")"),
d1=sum(res_100 >= num),
d2=sum(res_100 <= num),
pval=(min(c(sum(res_100 >= num),sum(res_100 <= num),
50))*2)/100,
name="133_height")
View(res_sum)
c.sets <- lapply(b.sets, function(x) sample(unique(x),61))
a_c.set <- sample(unique(a.set),61)
num2 <- sum(a_c.set %in% height_assoc)
resC_100 <- lapply(1:100, function(x) sum(unlist(c.sets[x]) %in% height_assoc)) %>% unlist()
sort(resC_100)
res_sum3 <- data.frame(
aSNPs=num2,
median_5_95=paste0(median(resC_100)," (",paste(quantile(resC_100, probs = c(0.05, 0.95)), collapse = " - "),")"),
d1=sum(resC_100 >= num2),
d2=sum(resC_100 <= num2),
pval=(min(c(sum(resC_100 >= num2),sum(resC_100 <= num2),
50))*2)/100,
name="61_height")
View(res_sum3)
a_c.set <- fread("Num_aSNPs.set.clean", header = F)$V1
load("clean_100_sets_height.rdata")
a_c.set <- fread("Num_aSNPs.set.clean", header = F)$V1
load("clean_100_sets_height.rdata")
c.sets <- lapply(sets_clean, function(x) sample(unique(x),62))
num2 <- sum(a_c.set %in% height$chr_pos)
resC_100 <- lapply(1:100, function(x) sum(unlist(c.sets[x]) %in% height$chr_pos)) %>% unlist()
sort(resC_100)
res_sum4 <- data.frame(
aSNPs=num2,
median_5_95=paste0(median(resC_100)," (",paste(quantile(resC_100, probs = c(0.05, 0.95)), collapse = " - "),")"),
d1=sum(resC_100 >= num2),
d2=sum(resC_100 <= num2),
pval=(min(c(sum(resC_100 >= num2),sum(resC_100 <= num2),
50))*2)/100,
name="62_ld_0.5_height")
res_total <- rbind(res_sum,res_sum3,res_sum4)
View(res_total)
height_assoc <- gsub("^","chr",height$chr_pos)
load("danat_height_analysis_SNPsets.rdat")
a.set
b.sets[1]
num <- sum(a.set %in% height_assoc)
res_100 <- lapply(1:100, function(x) sum(unlist(b.sets[x]) %in% height_assoc)) %>% unlist()
sort(res_100)
res_sum <- data.frame(
aSNPs=num,
median_5_95=paste0(median(res_100)," (",paste(quantile(res_100, probs = c(0.05, 0.95)), collapse = " - "),")"),
d1=sum(res_100 >= num),
d2=sum(res_100 <= num),
pval=(min(c(sum(res_100 >= num),sum(res_100 <= num),
50))*2)/100,
name="133_height")
View(res_sum)
## random sets Micha
height_assoc <- gsub("^","chr",height$chr_pos)
load("danat_height_analysis_SNPsets.rdat")
a.set
b.sets[1]
num <- sum(a.set %in% height_assoc)
res_100 <- lapply(1:100, function(x) sum(unlist(b.sets[x]) %in% height_assoc)) %>% unlist()
sort(res_100)
res_sum <- data.frame(
aSNPs=num,
median_5_95=paste0(median(res_100)," (",paste(quantile(res_100, probs = c(0.05, 0.95)), collapse = " - "),")"),
d1=sum(res_100 >= num),
d2=sum(res_100 <= num),
pval=(min(c(sum(res_100 >= num),sum(res_100 <= num),
50))*2)/100,
name="133_height")
#height <- fread("50_irnt.gwas.imputed_v3.both_sexes.tsv.gz")
#height <- height[height$low_confidence_variant == F,]
#height <- height[height$pval < 5e-08,]
#height <- separate(height,variant,c("chr","position","REF","ALR"), sep = ":")
#height$chr_pos <- paste(height$chr,height$position, sep = "_")
#write.table(height, "height.sign.txt", row.names = F, quote = F, sep = "\t")
height <- fread("height.sign.txt.gz")
quantile(height$pval, seq(0,1,0.01))
#height <- fread("50_irnt.gwas.imputed_v3.both_sexes.tsv.gz")
#height <- height[height$low_confidence_variant == F,]
#height <- height[height$pval < 5e-08,]
#height <- separate(height,variant,c("chr","position","REF","ALR"), sep = ":")
#height$chr_pos <- paste(height$chr,height$position, sep = "_")
#write.table(height, "height.sign.txt", row.names = F, quote = F, sep = "\t")
height <- fread("height.sign.txt.gz")
quantile(height$pval, seq(0,1,0.01))
height <- height[height$pval < 5e-8,]
#height <- fread("50_irnt.gwas.imputed_v3.both_sexes.tsv.gz")
#height <- height[height$low_confidence_variant == F,]
#height <- height[height$pval < 5e-08,]
#height <- separate(height,variant,c("chr","position","REF","ALR"), sep = ":")
#height$chr_pos <- paste(height$chr,height$position, sep = "_")
#write.table(height, "height.sign.txt", row.names = F, quote = F, sep = "\t")
height <- fread("height.sign.txt.gz")
quantile(height$pval, seq(0,1,0.01))
height <- height[height$pval < 5e-8,]
## random sets Micha
height_assoc <- gsub("^","chr",height$chr_pos)
load("danat_height_analysis_SNPsets.rdat")
a.set
b.sets[1]
num <- sum(a.set %in% height_assoc)
res_100 <- lapply(1:100, function(x) sum(unlist(b.sets[x]) %in% height_assoc)) %>% unlist()
sort(res_100)
res_sum <- data.frame(
aSNPs=num,
median_5_95=paste0(median(res_100)," (",paste(quantile(res_100, probs = c(0.05, 0.95)), collapse = " - "),")"),
d1=sum(res_100 >= num),
d2=sum(res_100 <= num),
pval=(min(c(sum(res_100 >= num),sum(res_100 <= num),
50))*2)/100,
name="133_height")
View(res_sum)
res_sum <- data.frame(
aSNPs=num,
median_5_95=paste0(median(res_100)," (",paste(quantile(res_100, probs = c(0.05, 0.95)), collapse = " - "),")"),
d1=sum(res_100 >= num),
d2=sum(res_100 <= num),
pval=(min(c(sum(res_100 >= num),sum(res_100 <= num),
50))*2)/100,
name="133_height")
c.sets <- lapply(b.sets, function(x) sample(unique(x),61))
a_c.set <- sample(unique(a.set),61)
num2 <- sum(a_c.set %in% height_assoc)
resC_100 <- lapply(1:100, function(x) sum(unlist(c.sets[x]) %in% height_assoc)) %>% unlist()
sort(resC_100)
res_sum3 <- data.frame(
aSNPs=num2,
median_5_95=paste0(median(resC_100)," (",paste(quantile(resC_100, probs = c(0.05, 0.95)), collapse = " - "),")"),
d1=sum(resC_100 >= num2),
d2=sum(resC_100 <= num2),
pval=(min(c(sum(resC_100 >= num2),sum(resC_100 <= num2),
50))*2)/100,
name="61_height")
View(res_sum3)
a_c.set <- fread("Num_aSNPs.set.clean", header = F)$V1
load("clean_100_sets_height.rdata")
c.sets <- lapply(sets_clean, function(x) sample(unique(x),62))
num2 <- sum(a_c.set %in% height$chr_pos)
resC_100 <- lapply(1:100, function(x) sum(unlist(c.sets[x]) %in% height$chr_pos)) %>% unlist()
sort(resC_100)
res_sum4 <- data.frame(
aSNPs=num2,
median_5_95=paste0(median(resC_100)," (",paste(quantile(resC_100, probs = c(0.05, 0.95)), collapse = " - "),")"),
d1=sum(resC_100 >= num2),
d2=sum(resC_100 <= num2),
pval=(min(c(sum(resC_100 >= num2),sum(resC_100 <= num2),
50))*2)/100,
name="62_ld_0.5_height")
View(res_sum4)
height_assoc <- gsub("^","chr",height$chr_pos)
load("danat_height_analysis_SNPsets.rdat")
a.set
b.sets[1]
num <- sum(a.set %in% height_assoc)
res_100 <- lapply(1:100, function(x) sum(unlist(b.sets[x]) %in% height_assoc)) %>% unlist()
sort(res_100)
res_sum <- data.frame(
aSNPs=num,
median_5_95=paste0(median(res_100)," (",paste(quantile(res_100, probs = c(0.05, 0.95)), collapse = " - "),")"),
d1=sum(res_100 >= num),
d2=sum(res_100 <= num),
pval=(min(c(sum(res_100 >= num),sum(res_100 <= num),
50))*2)/100,
name="133_height")
View(res_sum)
get_snps_bins <- function(n){
temp <- same_af[same_af$AssessedAllele_AF_rounded == t_subset$Var1[n],16]$chr_pos
return(sample(temp,t_subset$Freq[n]))
}
res <- c()
for (i in 1:100){
r1 <- unlist(lapply(1:nrow(t_subset), function(x) get_snps_bins(x)))
res <- c(res,sum(r1 %in% dt)) #simple associations
#res <- c(res,sum(r1 %in% height$chr_pos)) #simple height test
}
res
num <- sum(dt_m_removed$chr_pos %in% dt)
#num <- sum(dt_m_removed$chr_pos %in% height$chr_pos)
#num <- 3 #num_of_testing
#res_sum$name <- "r0.5"
res_sum <- data.frame(
median_5_95=paste0(median(res)," (",paste(quantile(res, probs = c(0.05, 0.95)), collapse = " - "),")"),
d1=sum(res >= num),
d2=sum(res <= num),
pval=(min(c(sum(res >= num),sum(res <= num),
50))*2)/100,
name="0.5_ilsntnfree_15aSNPs")
## random sets Micha
height_assoc <- gsub("^","chr",height$chr_pos)
load("danat_height_analysis_SNPsets.rdat")
a.set
b.sets[1]
num <- sum(a.set %in% height_assoc)
res_100 <- lapply(1:100, function(x) sum(unlist(b.sets[x]) %in% height_assoc)) %>% unlist()
sort(res_100)
res_sum <- data.frame(
aSNPs=num,
median_5_95=paste0(median(res_100)," (",paste(quantile(res_100, probs = c(0.05, 0.95)), collapse = " - "),")"),
d1=sum(res_100 >= num),
d2=sum(res_100 <= num),
pval=(min(c(sum(res_100 >= num),sum(res_100 <= num),
50))*2)/100,
name="133_height")
View(res_sum)
same_af <- dt_all_removed[dt_all_removed$AssessedAllele_AF_rounded %in% dt_m_removed$AssessedAllele_AF_rounded,]
table(same_af$AssessedAllele_AF_rounded)
#n=2
#might be 16
get_snps_bins <- function(n){
temp <- same_af[same_af$AssessedAllele_AF_rounded == t_subset$Var1[n],16]$chr_pos
return(sample(temp,t_subset$Freq[n]))
}
res <- c()
for (i in 1:100){
r1 <- unlist(lapply(1:nrow(t_subset), function(x) get_snps_bins(x)))
res <- c(res,sum(r1 %in% dt)) #simple associations
#res <- c(res,sum(r1 %in% height$chr_pos)) #simple height test
}
res
num <- sum(dt_m_removed$chr_pos %in% dt)
#num <- sum(dt_m_removed$chr_pos %in% height$chr_pos)
#num <- 3 #num_of_testing
#res_sum$name <- "r0.5"
res_sum <- data.frame(
median_5_95=paste0(median(res)," (",paste(quantile(res, probs = c(0.05, 0.95)), collapse = " - "),")"),
d1=sum(res >= num),
d2=sum(res <= num),
pval=(min(c(sum(res >= num),sum(res <= num),
50))*2)/100,
name="0.5_ilsntnfree_15aSNPs")
#res_total <- rbind(res_total,res_sum)
#write.table(res_total, "result_from_test.txt", row.names = F, quote = F, sep = "\t")
View(res_sum)
sum(dt_m_removed$chr_pos %in% dt)
