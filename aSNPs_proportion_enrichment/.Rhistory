?ns()
exp(0.012377)
exp(-0.03427)
## If you DO NOT want to play around with themes comment this next line
## And comment line 41 -> +theme_economist()
if(!require(ggthemes)){install.packages("ggthemes")}
install.packages("ggthemes")
library(ggthemes)
## Create your dataframe here
data <- data.frame(name = c('Writing Introduction', 'Writing Materials & Methods', 'Writing Discussion & Conclusion', #Thesis
'ChromoPainter on 50.000 Estonians', # Analyses
'Paper n1-n2-n3'),  #Published stuff
start = c("2021-09", "2021-05", "2021-07", #Thesis
"2021-05", #Analyses
"2021-04"), #Published stuff
end = c("2022-01", "2021-09", "2022-05",
"2021-09",
"2021-05"),
Task_Situation = c('Thesis', 'Thesis','Thesis',
'Analyses',
'Published Work')
)
View(data)
data
# List your favourite colors in the var defined_colous
defined_colours = c("#ffc3a0","#40e0d0","#fff68f","#c6e2ff")
if (length(unique(data$Task_Situation)) >= length(defined_colours)) {
print("Are you sure you typed enough colors?")
}
# Horizontal lines
y.breaks <- seq(1,length(unique(data$name)))
# Vertical lines
x.breaks <- seq(1,length(unique(data$start)) + length(unique(data$end)))
# Line colour
colour_lines = "grey80"
## Create the gnam gnam chart
ggplot(data, aes(x=start, xend=end, y=name, yend=name, color=Task_Situation)) +
#Theme
theme_economist_white() +
#Segment size:
geom_segment(size=8) +
# horizontal and vertical lines
# geom_hline(yintercept=y.breaks+0.5, colour=colour_lines, linetype="dotted") +
geom_vline(xintercept = x.breaks+0.5, colour=colour_lines, linetype="dotted") +
#Segments colours, uncomment this if you want rainbow colors
scale_colour_manual(values = defined_colours) +
#Title & Labs
#labs(title='Schedule', x='Time', y='Tasks') +
labs(title = 'Schedule', x = NULL, y = NULL)
## Installation failed, I had to do it manually
library(ggplot)
## Installation failed, I had to do it manually
library(ggplot2)
## Create the gnam gnam chart
ggplot(data, aes(x=start, xend=end, y=name, yend=name, color=Task_Situation)) +
#Theme
theme_economist_white() +
#Segment size:
geom_segment(size=8) +
# horizontal and vertical lines
# geom_hline(yintercept=y.breaks+0.5, colour=colour_lines, linetype="dotted") +
geom_vline(xintercept = x.breaks+0.5, colour=colour_lines, linetype="dotted") +
#Segments colours, uncomment this if you want rainbow colors
scale_colour_manual(values = defined_colours) +
#Title & Labs
#labs(title='Schedule', x='Time', y='Tasks') +
labs(title = 'Schedule', x = NULL, y = NULL)
setwd("~/Tartu_Ulikooli/sum_sch/ss_21/")
setwd("~/Tartu_Ulikooli/sum_sch/")
library(data.table)
library(dplyr)
library(tidyr)
library(ggplot2)
setwd("~/Tartu_Ulikooli/sum_sch/")
library(data.table)
library(dplyr)
library(tidyr)
library(ggplot2)
Neand <- fread("Altai.hom.YRI.tsv") # upload altai neanderthal
Neand
colnames(Neand) <- c("CHROM","POS","REF","ALT_Neand","ALtai")
table(Neand$ALtai)
Neand <- Neand[Neand$ALtai %in% c("0/0","1/1"),] #subset alleles
table(Neand$ALtai)
YRI <- fread("ALL.chr2.phase3_shapeit2_mvncall_integrated_v5b.20130502.genotypes.hom.YRI.snps.tsv")
head(YRI)
colnames(YRI) <- c("CHROM","POS","REF","ALT","YRI")
table(YRI$YRI)
altai_yri <- merge(Neand,YRI) #merge them by chr pos ref
altai_yri$YRI <- gsub("\\|",'/',altai_yri$YRI) # change delimiter
View(altai_yri)
altai_yri <- altai_yri[altai_yri$ALtai != altai_yri$YRI,] # keep not matched i.e. uniq for Neand
table(altai_yri[,c(5,7)])
# remove huge data from the space
YRI <- NULL
Neand <- NULL
# write chr pos for subsetting from 1KG
write.table(altai_yri[,c(1,2)],file = "chr_pos_altai_yri.tsv", row.names = F, col.names = F, sep = "\t", quote = F)
fin <- fread("ALL.chr2.phase3_shapeit2_mvncall_integrated_v5b.20130502.genotypes.FIN.snps.vcf.gz", skip = "#CHROM")
head(fin)
fin <- fin[,c(1,2,4,5,10:108)]
colnames(fin)[1] <- "CHROM"
altai_yri_fin <- merge(altai_yri, fin, by = c("CHROM","POS","REF","ALT"))
# a small function that check presence among FIN presence of archaic alleles
# I return a few fins only for the purpose to show you some real ancient haplotypes
check_neand_vars <- function(x, df){
yri_geno <- df$YRI[x]
modern <- unique(unlist(df[x,8:length(df)]))
modern <- gsub("\\|",'/',modern) %>% unique()
if (yri_geno == "1/1"){
if (sum(c("0/0","0/1","1/0") %in% modern) > 0){
return(df[x,c(1:30)])
}
} else if (yri_geno == "0/0") {
if (sum(c("1/1","0/1","1/0") %in% modern) > 0){
return(df[x,c(1:30)])
}
}
}
# apply function via lapply
pos_neand_recheked <- lapply(1:nrow(altai_yri_fin), function(x) check_neand_vars(x, altai_yri_fin)) %>%
do.call(rbind, .) # 76'' ??
##### d. Polishing for use
pos_neand_recheked$ALT_Neand %>% table()
##### d. Polishing for use
pos_neand_recheked$ALT_Neand %>% table()
nchar(pos_neand_recheked$ALT_Neand)
pos_neand_recheked <- pos_neand_recheked[!nchar(pos_neand_recheked$ALT_Neand) > 1,]
##### d. Polishing for use
pos_neand_recheked$ALT_Neand %>% table()
pos_neand_recheked[pos_neand_recheked$ALT_Neand == ".",]
pos_neand_recheked$ALT_Neand[pos_neand_recheked$ALT_Neand == "."] <-
pos_neand_recheked$ALT[pos_neand_recheked$ALT_Neand == "."]
##### d. Polishing for use
pos_neand_recheked$ALT_Neand %>% table()
wrong_snps <- pos_neand_recheked[pos_neand_recheked$ALT_Neand != pos_neand_recheked$ALT,]
View(wrong_snps)
pos_neand_recheked <- pos_neand_recheked[pos_neand_recheked$ALT_Neand == pos_neand_recheked$ALT,]
##
load("~/Tartu_Ulikooli/EvHiCoTr/haplo/putativeVinAlt.NTaSNPs.rdat")
ntn <- ntn[ntn$chr == "2",]
sum(pos_neand_recheked$POS %in% ntn$position)
disease <- "C61"
gwass <- fread(paste0(disease,".gwas.imputed_v3.both_sexes.part.tsv.gz")) #C61\|M41\|K40\|I83\|G56
setwd("~/Tartu_Ulikooli/sum_sch/work_dir/")
disease <- "C61"
gwass <- fread(paste0(disease,".gwas.imputed_v3.both_sexes.part.tsv.gz")) #C61\|M41\|K40\|I83\|G56
gwass <- separate(gwass,variant, into = c("CHROM","POS","REF","ALT"), extra = "merge", sep = ":")
gwass$CHROM <- as.numeric(gwass$CHROM)
gwass$POS <- as.numeric(gwass$POS)
data_to_plot <- merge(pos_neand_recheked[,1:7], gwass, all.y = T) #merging with our map
only_neadn <- data_to_plot[!is.na(data_to_plot$ALT_Neand),]
only_neadn[only_neadn$ALT_Neand != only_neadn$minor_allele,] #!check them
data_to_plot$ancestry[is.na(data_to_plot$ALT_Neand)] <- "Other_snp"
data_to_plot$ancestry[is.na(data_to_plot$ancestry)] <- "Neand_snp"
data_to_plot$ancestry %>% table() # check what we've got in the end
jpeg(paste0(disease,"_full_plot.jpeg"),width = 1200, height = 800)
data_to_plot %>%
arrange(desc(ancestry)) %>%
ggplot()+
geom_point(aes(x = POS, y = -log10(pval), col = ancestry))+
#  ggtitle(paste0(name,": ", disease))+
labs(x = paste0("chromosome 2 : ",disease))+
theme(legend.position = "none")+
theme(plot.title = element_text(size=12, hjust=0.5))
dev.off()
nead_top_pos <- only_neadn$POS[order(only_neadn$pval)][1]
# try any window
# you can laucnh only line starting with data_to_plot; this should result in picture's pop up in the right bottom window
window <- 5e+5 # 4 5 6 7
jpeg(paste0(disease,"_zoom_plot.jpeg"),width = 1200, height = 800)
data_to_plot[data_to_plot$POS > nead_top_pos-window &
data_to_plot$POS < nead_top_pos+window,] %>%
arrange(desc(ancestry)) %>%
ggplot()+
geom_point(aes(x = POS, y = -log10(pval), col = ancestry))+
#  ggtitle(paste0(name,": ", disease))+
labs(x = paste0("chromosome 2 : ",disease))+
theme(legend.position = "none")+
theme(plot.title = element_text(size=12, hjust=0.5))
dev.off()
disease <- "M41"
gwass <- fread(paste0(disease,".gwas.imputed_v3.both_sexes.part.tsv.gz")) #C61\|M41\|K40\|I83\|G56
gwass <- separate(gwass,variant, into = c("CHROM","POS","REF","ALT"), extra = "merge", sep = ":")
gwass$CHROM <- as.numeric(gwass$CHROM)
gwass$POS <- as.numeric(gwass$POS)
data_to_plot <- merge(pos_neand_recheked[,1:7], gwass, all.y = T) #merging with our map
only_neadn <- data_to_plot[!is.na(data_to_plot$ALT_Neand),]
only_neadn[only_neadn$ALT_Neand != only_neadn$minor_allele,] #!check them
data_to_plot$ancestry[is.na(data_to_plot$ALT_Neand)] <- "Other_snp"
data_to_plot$ancestry[is.na(data_to_plot$ancestry)] <- "Neand_snp"
data_to_plot$ancestry %>% table() # check what we've got in the end
# plotting is art
jpeg(paste0(disease,"_full_plot.jpeg"),width = 1200, height = 800)
data_to_plot %>%
arrange(desc(ancestry)) %>%
ggplot()+
geom_point(aes(x = POS, y = -log10(pval), col = ancestry))+
#  ggtitle(paste0(name,": ", disease))+
labs(x = paste0("chromosome 2 : ",disease))+
theme(legend.position = "none")+
theme(plot.title = element_text(size=12, hjust=0.5))
dev.off()
nead_top_pos <- only_neadn$POS[order(only_neadn$pval)][1]
# try any window
# you can laucnh only line starting with data_to_plot; this should result in picture's pop up in the right bottom window
window <- 5e+5 # 4 5 6 7
jpeg(paste0(disease,"_zoom_plot.jpeg"),width = 1200, height = 800)
data_to_plot[data_to_plot$POS > nead_top_pos-window &
data_to_plot$POS < nead_top_pos+window,] %>%
arrange(desc(ancestry)) %>%
ggplot()+
geom_point(aes(x = POS, y = -log10(pval), col = ancestry))+
#  ggtitle(paste0(name,": ", disease))+
labs(x = paste0("chromosome 2 : ",disease))+
theme(legend.position = "none")+
theme(plot.title = element_text(size=12, hjust=0.5))
dev.off()
disease <- "K40"
gwass <- fread(paste0(disease,".gwas.imputed_v3.both_sexes.part.tsv.gz")) #C61\|M41\|K40\|I83\|G56
gwass <- separate(gwass,variant, into = c("CHROM","POS","REF","ALT"), extra = "merge", sep = ":")
gwass$CHROM <- as.numeric(gwass$CHROM)
gwass$POS <- as.numeric(gwass$POS)
data_to_plot <- merge(pos_neand_recheked[,1:7], gwass, all.y = T) #merging with our map
only_neadn <- data_to_plot[!is.na(data_to_plot$ALT_Neand),]
only_neadn[only_neadn$ALT_Neand != only_neadn$minor_allele,] #!check them
data_to_plot$ancestry[is.na(data_to_plot$ALT_Neand)] <- "Other_snp"
data_to_plot$ancestry[is.na(data_to_plot$ancestry)] <- "Neand_snp"
data_to_plot$ancestry %>% table() # check what we've got in the end
# plotting is art
jpeg(paste0(disease,"_full_plot.jpeg"),width = 1200, height = 800)
data_to_plot %>%
arrange(desc(ancestry)) %>%
ggplot()+
geom_point(aes(x = POS, y = -log10(pval), col = ancestry))+
#  ggtitle(paste0(name,": ", disease))+
labs(x = paste0("chromosome 2 : ",disease))+
theme(legend.position = "none")+
theme(plot.title = element_text(size=12, hjust=0.5))
dev.off()
nead_top_pos <- only_neadn$POS[order(only_neadn$pval)][1]
# try any window
# you can laucnh only line starting with data_to_plot; this should result in picture's pop up in the right bottom window
window <- 5e+5 # 4 5 6 7
jpeg(paste0(disease,"_zoom_plot.jpeg"),width = 1200, height = 800)
data_to_plot[data_to_plot$POS > nead_top_pos-window &
data_to_plot$POS < nead_top_pos+window,] %>%
arrange(desc(ancestry)) %>%
ggplot()+
geom_point(aes(x = POS, y = -log10(pval), col = ancestry))+
#  ggtitle(paste0(name,": ", disease))+
labs(x = paste0("chromosome 2 : ",disease))+
theme(legend.position = "none")+
theme(plot.title = element_text(size=12, hjust=0.5))
dev.off()
#show haplotypes??
nead_top_pos
disease <- "I83"
gwass <- fread(paste0(disease,".gwas.imputed_v3.both_sexes.part.tsv.gz")) #C61\|M41\|K40\|I83\|G56
gwass <- separate(gwass,variant, into = c("CHROM","POS","REF","ALT"), extra = "merge", sep = ":")
gwass$CHROM <- as.numeric(gwass$CHROM)
gwass$POS <- as.numeric(gwass$POS)
data_to_plot <- merge(pos_neand_recheked[,1:7], gwass, all.y = T) #merging with our map
only_neadn <- data_to_plot[!is.na(data_to_plot$ALT_Neand),]
only_neadn[only_neadn$ALT_Neand != only_neadn$minor_allele,] #!check them
data_to_plot$ancestry[is.na(data_to_plot$ALT_Neand)] <- "Other_snp"
data_to_plot$ancestry[is.na(data_to_plot$ancestry)] <- "Neand_snp"
data_to_plot$ancestry %>% table() # check what we've got in the end
# plotting is art
jpeg(paste0(disease,"_full_plot.jpeg"),width = 1200, height = 800)
data_to_plot %>%
arrange(desc(ancestry)) %>%
ggplot()+
geom_point(aes(x = POS, y = -log10(pval), col = ancestry))+
#  ggtitle(paste0(name,": ", disease))+
labs(x = paste0("chromosome 2 : ",disease))+
theme(legend.position = "none")+
theme(plot.title = element_text(size=12, hjust=0.5))
dev.off()
nead_top_pos <- only_neadn$POS[order(only_neadn$pval)][1]
# try any window
# you can laucnh only line starting with data_to_plot; this should result in picture's pop up in the right bottom window
window <- 5e+5 # 4 5 6 7
jpeg(paste0(disease,"_zoom_plot.jpeg"),width = 1200, height = 800)
data_to_plot[data_to_plot$POS > nead_top_pos-window &
data_to_plot$POS < nead_top_pos+window,] %>%
arrange(desc(ancestry)) %>%
ggplot()+
geom_point(aes(x = POS, y = -log10(pval), col = ancestry))+
#  ggtitle(paste0(name,": ", disease))+
labs(x = paste0("chromosome 2 : ",disease))+
theme(legend.position = "none")+
theme(plot.title = element_text(size=12, hjust=0.5))
dev.off()
disease <- "G56"
disease <- "G56"
gwass <- fread(paste0(disease,".gwas.imputed_v3.both_sexes.part.tsv.gz")) #C61\|M41\|K40\|I83\|G56
gwass <- separate(gwass,variant, into = c("CHROM","POS","REF","ALT"), extra = "merge", sep = ":")
gwass$CHROM <- as.numeric(gwass$CHROM)
gwass$POS <- as.numeric(gwass$POS)
data_to_plot <- merge(pos_neand_recheked[,1:7], gwass, all.y = T) #merging with our map
only_neadn <- data_to_plot[!is.na(data_to_plot$ALT_Neand),]
only_neadn[only_neadn$ALT_Neand != only_neadn$minor_allele,] #!check them
data_to_plot$ancestry[is.na(data_to_plot$ALT_Neand)] <- "Other_snp"
data_to_plot$ancestry[is.na(data_to_plot$ancestry)] <- "Neand_snp"
data_to_plot$ancestry %>% table() # check what we've got in the end
# plotting is art
jpeg(paste0(disease,"_full_plot.jpeg"),width = 1200, height = 800)
data_to_plot %>%
arrange(desc(ancestry)) %>%
ggplot()+
geom_point(aes(x = POS, y = -log10(pval), col = ancestry))+
#  ggtitle(paste0(name,": ", disease))+
labs(x = paste0("chromosome 2 : ",disease))+
theme(legend.position = "none")+
theme(plot.title = element_text(size=12, hjust=0.5))
dev.off()
nead_top_pos <- only_neadn$POS[order(only_neadn$pval)][1]
# try any window
# you can laucnh only line starting with data_to_plot; this should result in picture's pop up in the right bottom window
window <- 5e+5 # 4 5 6 7
jpeg(paste0(disease,"_zoom_plot.jpeg"),width = 1200, height = 800)
data_to_plot[data_to_plot$POS > nead_top_pos-window &
data_to_plot$POS < nead_top_pos+window,] %>%
arrange(desc(ancestry)) %>%
ggplot()+
geom_point(aes(x = POS, y = -log10(pval), col = ancestry))+
#  ggtitle(paste0(name,": ", disease))+
labs(x = paste0("chromosome 2 : ",disease))+
theme(legend.position = "none")+
theme(plot.title = element_text(size=12, hjust=0.5))
dev.off()
#show haplotypes??
nead_top_pos
#I guess that you unpacked the stuff in your home_dir
setwd("~/work_dir/")
library(data.table)
library(dplyr)
library(tidyr)
library(ggplot2)
Neand <- fread("Altai.hom.YRI.tsv") # upload altai neanderthal
Neand
colnames(Neand) <- c("CHROM","POS","REF","ALT_Neand","ALtai")
table(Neand$ALtai)
Neand <- Neand[Neand$ALtai %in% c("0/0","1/1"),] #subset alleles
table(Neand$ALtai)
YRI <- fread("ALL.chr2.phase3_shapeit2_mvncall_integrated_v5b.20130502.genotypes.hom.YRI.snps.tsv")
head(YRI)
colnames(YRI) <- c("CHROM","POS","REF","ALT","YRI")
table(YRI$YRI)
altai_yri <- merge(Neand,YRI) #merge them by chr pos ref
altai_yri$YRI <- gsub("\\|",'/',altai_yri$YRI) # change delimiter
altai_yri <- altai_yri[altai_yri$ALtai != altai_yri$YRI,] # keep not matched i.e. uniq for Neand
table(altai_yri[,c(5,7)])
# remove huge data from the space
YRI <- NULL
Neand <- NULL
# write chr pos for subsetting from 1KG
write.table(altai_yri[,c(1,2)],file = "chr_pos_altai_yri.tsv", row.names = F, col.names = F, sep = "\t", quote = F)
fin <- fread("ALL.chr2.phase3_shapeit2_mvncall_integrated_v5b.20130502.genotypes.FIN.snps.vcf.gz", skip = "#CHROM")
head(fin)
fin <- fin[,c(1,2,4,5,10:108)]
colnames(fin)[1] <- "CHROM"
altai_yri_fin <- merge(altai_yri, fin, by = c("CHROM","POS","REF","ALT"))
# a small function that check presence among FIN presence of archaic alleles
# I return a few fins only for the purpose to show you some real ancient haplotypes
check_neand_vars <- function(x, df){
yri_geno <- df$YRI[x]
modern <- unique(unlist(df[x,8:length(df)]))
modern <- gsub("\\|",'/',modern) %>% unique()
if (yri_geno == "1/1"){
if (sum(c("0/0","0/1","1/0") %in% modern) > 0){
return(df[x,c(1:30)])
}
} else if (yri_geno == "0/0") {
if (sum(c("1/1","0/1","1/0") %in% modern) > 0){
return(df[x,c(1:30)])
}
}
}
# apply function via lapply
pos_neand_recheked <- lapply(1:nrow(altai_yri_fin), function(x) check_neand_vars(x, altai_yri_fin)) %>%
do.call(rbind, .) # 30'' ??
pos_neand_recheked$ALT_Neand %>% table()
pos_neand_recheked <- pos_neand_recheked[!nchar(pos_neand_recheked$ALT_Neand) > 1,]
pos_neand_recheked$ALT_Neand[pos_neand_recheked$ALT_Neand == "."] <-
pos_neand_recheked$ALT[pos_neand_recheked$ALT_Neand == "."]
wrong_snps <- pos_neand_recheked[pos_neand_recheked$ALT_Neand != pos_neand_recheked$ALT,]
pos_neand_recheked <- pos_neand_recheked[pos_neand_recheked$ALT_Neand == pos_neand_recheked$ALT,]
disease <- "C61"
gwass <- fread(paste0(disease,".gwas.imputed_v3.both_sexes.part.tsv.gz")) #C61\|M41\|K40\|I83\|G56
gwass <- separate(gwass,variant, into = c("CHROM","POS","REF","ALT"), extra = "merge", sep = ":")
gwass$CHROM <- as.numeric(gwass$CHROM)
gwass$POS <- as.numeric(gwass$POS)
data_to_plot <- merge(pos_neand_recheked[,1:7], gwass, all.y = T) #merging with our map
only_neadn <- data_to_plot[!is.na(data_to_plot$ALT_Neand),]
only_neadn[only_neadn$ALT_Neand != only_neadn$minor_allele,] #!check them
data_to_plot$ancestry[is.na(data_to_plot$ALT_Neand)] <- "Other_snp"
data_to_plot$ancestry[is.na(data_to_plot$ancestry)] <- "Neand_snp"
data_to_plot$ancestry %>% table() # check what we've got in the end
# plotting is art
jpeg(paste0(disease,"_full_plot.jpeg"),width = 1200, height = 800)
data_to_plot %>%
arrange(desc(ancestry)) %>%
ggplot()+
geom_point(aes(x = POS, y = -log10(pval), col = ancestry))+
#  ggtitle(paste0(name,": ", disease))+
labs(x = paste0("chromosome 2 : ",disease))+
theme(legend.position = "none")+
theme(plot.title = element_text(size=12, hjust=0.5))
dev.off()
nead_top_pos <- only_neadn$POS[order(only_neadn$pval)][1]
# try any window
# you can laucnh only line starting with data_to_plot; this should result in picture's pop up in the right bottom window
window <- 5e+5 # 4 5 6 7
jpeg(paste0(disease,"_zoom_plot.jpeg"),width = 1200, height = 800)
data_to_plot[data_to_plot$POS > nead_top_pos-window &
data_to_plot$POS < nead_top_pos+window,] %>%
arrange(desc(ancestry)) %>%
ggplot()+
geom_point(aes(x = POS, y = -log10(pval), col = ancestry))+
#  ggtitle(paste0(name,": ", disease))+
labs(x = paste0("chromosome 2 : ",disease))+
theme(legend.position = "none")+
theme(plot.title = element_text(size=12, hjust=0.5))
dev.off()
#show haplotypes??
nead_top_pos
load("~/Tartu_Ulikooli/random_sets_ukbb.rdat")
View(sets)
load("~/Tartu_Ulikooli/EvHiCoTr/haplo/putativeVinAlt.NTaSNPs.rdat")
neand <- sets[1]
neand <- data.table::data.table(neand)
View(neand)
library(dplyr)
library(data.table)
neand <- sets[1] %>% unlist()
neand <- data.table(neand)
View(neand)
#neand <- separate
library(tidyr)
View(ntn)
View(neand)
neand <- separate(neand,neand,c("chr","position"), sep = "_")
ntn2 <- merge(ntn, neand)
neand <- sets[2] %>% unlist()
neand <- data.table(neand)
neand <- separate(neand,neand,c("chr","position"), sep = "_")
ntn3 <- merge(ntn, neand)
View(ntn3)
neand <- sets[3] %>% unlist()
neand <- data.table(neand)
neand <- separate(neand,neand,c("chr","position"), sep = "_")
ntn4 <- merge(ntn, neand)
View(ntn3)
View(ntn4)
View(ntn3)
load("~/Tartu_Ulikooli/EvHiCoTr/haplo/putativeVinAlt.NTaSNPs.rdat")
ntn$chr %>% table()
z <- "ACGD"
substr(2,2,z)
?substr()
substr(z,2,2)
substr(z,2,2) <- "F"
myseq_data <- c("CGTAGTA","TGCGATG")
myseq_test <- c("CGTAGTA","TGCGATG")
myseq_test <- c("CGTAGTA","TGCGATG")
snp_pos_from_start <- c(3,6)
alt_snp <- c("F","B")
myseq_test_2 <- myseq_test
substr(myseq_test_2,snp_pos_from_start,snp_pos_from_start) <- alt_snp
str_sub
str_sub()
?str_sub()
?stringr::str_sub()
myseq_test_2 <- myseq_test
stringr::sub_str(myseq_test_2,snp_pos_from_start,snp_pos_from_start) <- alt_snp
stringr::str_sub(myseq_test_2,snp_pos_from_start,snp_pos_from_start) <- alt_snp
3.0e9
3.0e9/320e+03
1/9375
dat <- data.frame(value=runif(26)*10,
grouping=c(rep("Group 1",10),
rep("Group 2",10),
rep("Group 3",6)),
letters=LETTERS[1:26])
head(dat)
value grouping letters
1 8.316451  Group 1       A
2 9.768578  Group 1       B
3 4.896294  Group 1       C
4 2.004545  Group 1       D
5 4.905058  Group 1       E
6 8.997713  Group 1       F
head(dat)
library(ggplot2)
ggplot(dat, aes(grouping, value, fill=letters, label = letters)) +
geom_bar(position="dodge", stat="identity") +
geom_text(position = position_dodge(width = 1), aes(x=grouping, y=0))
ggplot(dat, aes(letters,value, label = letters)) +
geom_bar(stat="identity") +
facet_wrap(~grouping, scales="free")
z <- fread("Tartu_Ulikooli/pr1_transeQTLs/ntn_no_ILS.tsv")
library(data.table)
z <- fread("Tartu_Ulikooli/pr1_transeQTLs/ntn_no_ILS.tsv")
View(z)
?combn()
setwd("~/Dropbox/Tartu_Ulikooli/pr1_transeQTLs/Neandertal_trans-eQTLs/aSNPs_proportion_enrichment/")
# https://vbaliga.github.io/verify-that-r-packages-are-installed-and-loaded/
## load or install&load all
packages = c("data.table",
"dplyr", "tidyr")
